
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.InstanceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  connectionStatus: 'connectionStatus',
  ownerJid: 'ownerJid',
  profileName: 'profileName',
  profilePicUrl: 'profilePicUrl',
  integration: 'integration',
  number: 'number',
  businessId: 'businessId',
  token: 'token',
  clientName: 'clientName',
  disconnectionReasonCode: 'disconnectionReasonCode',
  disconnectionObject: 'disconnectionObject',
  disconnectionAt: 'disconnectionAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  creds: 'creds',
  createdAt: 'createdAt'
};

exports.Prisma.ChatScalarFieldEnum = {
  id: 'id',
  remoteJid: 'remoteJid',
  name: 'name',
  labels: 'labels',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId',
  unreadMessages: 'unreadMessages'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  remoteJid: 'remoteJid',
  pushName: 'pushName',
  profilePicUrl: 'profilePicUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  key: 'key',
  pushName: 'pushName',
  participant: 'participant',
  messageType: 'messageType',
  message: 'message',
  contextInfo: 'contextInfo',
  source: 'source',
  messageTimestamp: 'messageTimestamp',
  chatwootMessageId: 'chatwootMessageId',
  chatwootInboxId: 'chatwootInboxId',
  chatwootConversationId: 'chatwootConversationId',
  chatwootContactInboxSourceId: 'chatwootContactInboxSourceId',
  chatwootIsRead: 'chatwootIsRead',
  instanceId: 'instanceId',
  webhookUrl: 'webhookUrl',
  status: 'status',
  sessionId: 'sessionId'
};

exports.Prisma.MessageUpdateScalarFieldEnum = {
  id: 'id',
  keyId: 'keyId',
  remoteJid: 'remoteJid',
  fromMe: 'fromMe',
  participant: 'participant',
  pollUpdates: 'pollUpdates',
  status: 'status',
  messageId: 'messageId',
  instanceId: 'instanceId'
};

exports.Prisma.WebhookScalarFieldEnum = {
  id: 'id',
  url: 'url',
  headers: 'headers',
  enabled: 'enabled',
  events: 'events',
  webhookByEvents: 'webhookByEvents',
  webhookBase64: 'webhookBase64',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.ChatwootScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  accountId: 'accountId',
  token: 'token',
  url: 'url',
  nameInbox: 'nameInbox',
  signMsg: 'signMsg',
  signDelimiter: 'signDelimiter',
  number: 'number',
  reopenConversation: 'reopenConversation',
  conversationPending: 'conversationPending',
  mergeBrazilContacts: 'mergeBrazilContacts',
  importContacts: 'importContacts',
  importMessages: 'importMessages',
  daysLimitImportMessages: 'daysLimitImportMessages',
  organization: 'organization',
  logo: 'logo',
  ignoreJids: 'ignoreJids',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.LabelScalarFieldEnum = {
  id: 'id',
  labelId: 'labelId',
  name: 'name',
  color: 'color',
  predefinedId: 'predefinedId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.ProxyScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  host: 'host',
  port: 'port',
  protocol: 'protocol',
  username: 'username',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.SettingScalarFieldEnum = {
  id: 'id',
  rejectCall: 'rejectCall',
  msgCall: 'msgCall',
  groupsIgnore: 'groupsIgnore',
  alwaysOnline: 'alwaysOnline',
  readMessages: 'readMessages',
  readStatus: 'readStatus',
  syncFullHistory: 'syncFullHistory',
  wavoipToken: 'wavoipToken',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.RabbitmqScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  events: 'events',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.NatsScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  events: 'events',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.SqsScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  events: 'events',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.WebsocketScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  events: 'events',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.PusherScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  appId: 'appId',
  key: 'key',
  secret: 'secret',
  cluster: 'cluster',
  useTLS: 'useTLS',
  events: 'events',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.TypebotScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  description: 'description',
  url: 'url',
  typebot: 'typebot',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ignoreJids: 'ignoreJids',
  triggerType: 'triggerType',
  triggerOperator: 'triggerOperator',
  triggerValue: 'triggerValue',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  instanceId: 'instanceId'
};

exports.Prisma.TypebotSettingScalarFieldEnum = {
  id: 'id',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  typebotIdFallback: 'typebotIdFallback',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.MediaScalarFieldEnum = {
  id: 'id',
  fileName: 'fileName',
  type: 'type',
  mimetype: 'mimetype',
  createdAt: 'createdAt',
  messageId: 'messageId',
  instanceId: 'instanceId'
};

exports.Prisma.OpenaiCredsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  apiKey: 'apiKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.OpenaiBotScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  description: 'description',
  botType: 'botType',
  assistantId: 'assistantId',
  functionUrl: 'functionUrl',
  model: 'model',
  systemMessages: 'systemMessages',
  assistantMessages: 'assistantMessages',
  userMessages: 'userMessages',
  maxTokens: 'maxTokens',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  ignoreJids: 'ignoreJids',
  triggerType: 'triggerType',
  triggerOperator: 'triggerOperator',
  triggerValue: 'triggerValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  openaiCredsId: 'openaiCredsId',
  instanceId: 'instanceId'
};

exports.Prisma.IntegrationSessionScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  remoteJid: 'remoteJid',
  pushName: 'pushName',
  status: 'status',
  awaitUser: 'awaitUser',
  context: 'context',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId',
  parameters: 'parameters',
  botId: 'botId'
};

exports.Prisma.OpenaiSettingScalarFieldEnum = {
  id: 'id',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  speechToText: 'speechToText',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  openaiCredsId: 'openaiCredsId',
  openaiIdFallback: 'openaiIdFallback',
  instanceId: 'instanceId'
};

exports.Prisma.TemplateScalarFieldEnum = {
  id: 'id',
  templateId: 'templateId',
  name: 'name',
  template: 'template',
  webhookUrl: 'webhookUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.DifyScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  description: 'description',
  botType: 'botType',
  apiUrl: 'apiUrl',
  apiKey: 'apiKey',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  triggerType: 'triggerType',
  triggerOperator: 'triggerOperator',
  triggerValue: 'triggerValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.DifySettingScalarFieldEnum = {
  id: 'id',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  difyIdFallback: 'difyIdFallback',
  instanceId: 'instanceId'
};

exports.Prisma.EvolutionBotScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  description: 'description',
  apiUrl: 'apiUrl',
  apiKey: 'apiKey',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  triggerType: 'triggerType',
  triggerOperator: 'triggerOperator',
  triggerValue: 'triggerValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.EvolutionBotSettingScalarFieldEnum = {
  id: 'id',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  botIdFallback: 'botIdFallback',
  instanceId: 'instanceId'
};

exports.Prisma.FlowiseScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  description: 'description',
  apiUrl: 'apiUrl',
  apiKey: 'apiKey',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  triggerType: 'triggerType',
  triggerOperator: 'triggerOperator',
  triggerValue: 'triggerValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.FlowiseSettingScalarFieldEnum = {
  id: 'id',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  flowiseIdFallback: 'flowiseIdFallback',
  instanceId: 'instanceId'
};

exports.Prisma.IsOnWhatsappScalarFieldEnum = {
  id: 'id',
  remoteJid: 'remoteJid',
  jidOptions: 'jidOptions',
  lid: 'lid',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.N8nScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  description: 'description',
  webhookUrl: 'webhookUrl',
  basicAuthUser: 'basicAuthUser',
  basicAuthPass: 'basicAuthPass',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  triggerType: 'triggerType',
  triggerOperator: 'triggerOperator',
  triggerValue: 'triggerValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.N8nSettingScalarFieldEnum = {
  id: 'id',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  n8nIdFallback: 'n8nIdFallback',
  instanceId: 'instanceId'
};

exports.Prisma.EvoaiScalarFieldEnum = {
  id: 'id',
  enabled: 'enabled',
  description: 'description',
  agentUrl: 'agentUrl',
  apiKey: 'apiKey',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  triggerType: 'triggerType',
  triggerOperator: 'triggerOperator',
  triggerValue: 'triggerValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  instanceId: 'instanceId'
};

exports.Prisma.EvoaiSettingScalarFieldEnum = {
  id: 'id',
  expire: 'expire',
  keywordFinish: 'keywordFinish',
  delayMessage: 'delayMessage',
  unknownMessage: 'unknownMessage',
  listeningFromMe: 'listeningFromMe',
  stopBotFromMe: 'stopBotFromMe',
  keepOpen: 'keepOpen',
  debounceTime: 'debounceTime',
  ignoreJids: 'ignoreJids',
  splitMessages: 'splitMessages',
  timePerChar: 'timePerChar',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  evoaiIdFallback: 'evoaiIdFallback',
  instanceId: 'instanceId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.InstanceConnectionStatus = exports.$Enums.InstanceConnectionStatus = {
  open: 'open',
  close: 'close',
  connecting: 'connecting'
};

exports.DeviceMessage = exports.$Enums.DeviceMessage = {
  ios: 'ios',
  android: 'android',
  web: 'web',
  unknown: 'unknown',
  desktop: 'desktop'
};

exports.SessionStatus = exports.$Enums.SessionStatus = {
  opened: 'opened',
  closed: 'closed',
  paused: 'paused'
};

exports.TriggerType = exports.$Enums.TriggerType = {
  all: 'all',
  keyword: 'keyword',
  none: 'none',
  advanced: 'advanced'
};

exports.TriggerOperator = exports.$Enums.TriggerOperator = {
  contains: 'contains',
  equals: 'equals',
  startsWith: 'startsWith',
  endsWith: 'endsWith',
  regex: 'regex'
};

exports.OpenaiBotType = exports.$Enums.OpenaiBotType = {
  assistant: 'assistant',
  chatCompletion: 'chatCompletion'
};

exports.DifyBotType = exports.$Enums.DifyBotType = {
  chatBot: 'chatBot',
  textGenerator: 'textGenerator',
  agent: 'agent',
  workflow: 'workflow'
};

exports.Prisma.ModelName = {
  Instance: 'Instance',
  Session: 'Session',
  Chat: 'Chat',
  Contact: 'Contact',
  Message: 'Message',
  MessageUpdate: 'MessageUpdate',
  Webhook: 'Webhook',
  Chatwoot: 'Chatwoot',
  Label: 'Label',
  Proxy: 'Proxy',
  Setting: 'Setting',
  Rabbitmq: 'Rabbitmq',
  Nats: 'Nats',
  Sqs: 'Sqs',
  Websocket: 'Websocket',
  Pusher: 'Pusher',
  Typebot: 'Typebot',
  TypebotSetting: 'TypebotSetting',
  Media: 'Media',
  OpenaiCreds: 'OpenaiCreds',
  OpenaiBot: 'OpenaiBot',
  IntegrationSession: 'IntegrationSession',
  OpenaiSetting: 'OpenaiSetting',
  Template: 'Template',
  Dify: 'Dify',
  DifySetting: 'DifySetting',
  EvolutionBot: 'EvolutionBot',
  EvolutionBotSetting: 'EvolutionBotSetting',
  Flowise: 'Flowise',
  FlowiseSetting: 'FlowiseSetting',
  IsOnWhatsapp: 'IsOnWhatsapp',
  N8n: 'N8n',
  N8nSetting: 'N8nSetting',
  Evoai: 'Evoai',
  EvoaiSetting: 'EvoaiSetting'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\attil\\OneDrive\\Área de Trabalho\\Sistemas\\Jupiara\\evolution-api-escola-jupiara\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "multiSchema"
    ],
    "sourceFilePath": "C:\\Users\\attil\\OneDrive\\Área de Trabalho\\Sistemas\\Jupiara\\evolution-api-escola-jupiara\\prisma\\postgresql-schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"multiSchema\"]\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n  schemas   = [\"evolution\"]\n}\n\nenum InstanceConnectionStatus {\n  open\n  close\n  connecting\n\n  @@schema(\"evolution\")\n}\n\nenum DeviceMessage {\n  ios\n  android\n  web\n  unknown\n  desktop\n\n  @@schema(\"evolution\")\n}\n\nenum SessionStatus {\n  opened\n  closed\n  paused\n\n  @@schema(\"evolution\")\n}\n\nenum TriggerType {\n  all\n  keyword\n  none\n  advanced\n\n  @@schema(\"evolution\")\n}\n\nenum TriggerOperator {\n  contains\n  equals\n  startsWith\n  endsWith\n  regex\n\n  @@schema(\"evolution\")\n}\n\nenum OpenaiBotType {\n  assistant\n  chatCompletion\n\n  @@schema(\"evolution\")\n}\n\nenum DifyBotType {\n  chatBot\n  textGenerator\n  agent\n  workflow\n\n  @@schema(\"evolution\")\n}\n\nmodel Instance {\n  id                      String                   @id @default(cuid())\n  name                    String                   @unique @db.VarChar(255)\n  connectionStatus        InstanceConnectionStatus @default(open)\n  ownerJid                String?                  @db.VarChar(100)\n  profileName             String?                  @db.VarChar(100)\n  profilePicUrl           String?                  @db.VarChar(500)\n  integration             String?                  @db.VarChar(100)\n  number                  String?                  @db.VarChar(100)\n  businessId              String?                  @db.VarChar(100)\n  token                   String?                  @db.VarChar(255)\n  clientName              String?                  @db.VarChar(100)\n  disconnectionReasonCode Int?                     @db.Integer\n  disconnectionObject     Json?                    @db.JsonB\n  disconnectionAt         DateTime?                @db.Timestamp\n  createdAt               DateTime?                @default(now()) @db.Timestamp\n  updatedAt               DateTime?                @updatedAt @db.Timestamp\n  Chat                    Chat[]\n  Contact                 Contact[]\n  Message                 Message[]\n  Webhook                 Webhook?\n  Chatwoot                Chatwoot?\n  Label                   Label[]\n  Proxy                   Proxy?\n  Setting                 Setting?\n  Rabbitmq                Rabbitmq?\n  Nats                    Nats?\n  Sqs                     Sqs?\n  Websocket               Websocket?\n  Typebot                 Typebot[]\n  Session                 Session?\n  MessageUpdate           MessageUpdate[]\n  TypebotSetting          TypebotSetting?\n  Media                   Media[]\n  OpenaiCreds             OpenaiCreds[]\n  OpenaiBot               OpenaiBot[]\n  OpenaiSetting           OpenaiSetting?\n  Template                Template[]\n  Dify                    Dify[]\n  DifySetting             DifySetting?\n  IntegrationSession      IntegrationSession[]\n  EvolutionBot            EvolutionBot[]\n  EvolutionBotSetting     EvolutionBotSetting?\n  Flowise                 Flowise[]\n  FlowiseSetting          FlowiseSetting?\n  Pusher                  Pusher?\n  N8n                     N8n[]\n  N8nSetting              N8nSetting[]\n  Evoai                   Evoai[]\n  EvoaiSetting            EvoaiSetting?\n\n  @@schema(\"evolution\")\n}\n\nmodel Session {\n  id        String   @id @default(cuid())\n  sessionId String   @unique\n  creds     String?  @db.Text\n  createdAt DateTime @default(now()) @db.Timestamp\n  Instance  Instance @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n\n  @@schema(\"evolution\")\n}\n\nmodel Chat {\n  id             String    @id @default(cuid())\n  remoteJid      String    @db.VarChar(100)\n  name           String?   @db.VarChar(100)\n  labels         Json?     @db.JsonB\n  createdAt      DateTime? @default(now()) @db.Timestamp\n  updatedAt      DateTime? @updatedAt @db.Timestamp\n  Instance       Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId     String\n  unreadMessages Int       @default(0)\n\n  @@index([instanceId])\n  @@index([remoteJid])\n  @@schema(\"evolution\")\n}\n\nmodel Contact {\n  id            String    @id @default(cuid())\n  remoteJid     String    @db.VarChar(100)\n  pushName      String?   @db.VarChar(100)\n  profilePicUrl String?   @db.VarChar(500)\n  createdAt     DateTime? @default(now()) @db.Timestamp\n  updatedAt     DateTime? @updatedAt @db.Timestamp\n  Instance      Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId    String\n\n  @@unique([remoteJid, instanceId])\n  @@index([remoteJid])\n  @@index([instanceId])\n  @@schema(\"evolution\")\n}\n\nmodel Message {\n  id                           String          @id @default(cuid())\n  key                          Json            @db.JsonB\n  pushName                     String?         @db.VarChar(100)\n  participant                  String?         @db.VarChar(100)\n  messageType                  String          @db.VarChar(100)\n  message                      Json            @db.JsonB\n  contextInfo                  Json?           @db.JsonB\n  source                       DeviceMessage\n  messageTimestamp             Int             @db.Integer\n  chatwootMessageId            Int?            @db.Integer\n  chatwootInboxId              Int?            @db.Integer\n  chatwootConversationId       Int?            @db.Integer\n  chatwootContactInboxSourceId String?         @db.VarChar(100)\n  chatwootIsRead               Boolean?        @db.Boolean\n  Instance                     Instance        @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId                   String\n  MessageUpdate                MessageUpdate[]\n  Media                        Media?\n  webhookUrl                   String?         @db.VarChar(500)\n  status                       String?         @db.VarChar(30)\n\n  sessionId String?\n  session   IntegrationSession? @relation(fields: [sessionId], references: [id])\n\n  @@index([instanceId])\n  @@schema(\"evolution\")\n}\n\nmodel MessageUpdate {\n  id          String   @id @default(cuid())\n  keyId       String   @db.VarChar(100)\n  remoteJid   String   @db.VarChar(100)\n  fromMe      Boolean  @db.Boolean\n  participant String?  @db.VarChar(100)\n  pollUpdates Json?    @db.JsonB\n  status      String   @db.VarChar(30)\n  Message     Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  messageId   String\n  Instance    Instance @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId  String\n\n  @@index([instanceId])\n  @@index([messageId])\n  @@schema(\"evolution\")\n}\n\nmodel Webhook {\n  id              String    @id @default(cuid())\n  url             String    @db.VarChar(500)\n  headers         Json?     @db.JsonB\n  enabled         Boolean?  @default(true) @db.Boolean\n  events          Json?     @db.JsonB\n  webhookByEvents Boolean?  @default(false) @db.Boolean\n  webhookBase64   Boolean?  @default(false) @db.Boolean\n  createdAt       DateTime? @default(now()) @db.Timestamp\n  updatedAt       DateTime  @updatedAt @db.Timestamp\n  Instance        Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String    @unique\n\n  @@index([instanceId])\n  @@schema(\"evolution\")\n}\n\nmodel Chatwoot {\n  id                      String    @id @default(cuid())\n  enabled                 Boolean?  @default(true) @db.Boolean\n  accountId               String?   @db.VarChar(100)\n  token                   String?   @db.VarChar(100)\n  url                     String?   @db.VarChar(500)\n  nameInbox               String?   @db.VarChar(100)\n  signMsg                 Boolean?  @default(false) @db.Boolean\n  signDelimiter           String?   @db.VarChar(100)\n  number                  String?   @db.VarChar(100)\n  reopenConversation      Boolean?  @default(false) @db.Boolean\n  conversationPending     Boolean?  @default(false) @db.Boolean\n  mergeBrazilContacts     Boolean?  @default(false) @db.Boolean\n  importContacts          Boolean?  @default(false) @db.Boolean\n  importMessages          Boolean?  @default(false) @db.Boolean\n  daysLimitImportMessages Int?      @db.Integer\n  organization            String?   @db.VarChar(100)\n  logo                    String?   @db.VarChar(500)\n  ignoreJids              Json?\n  createdAt               DateTime? @default(now()) @db.Timestamp\n  updatedAt               DateTime  @updatedAt @db.Timestamp\n  Instance                Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId              String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Label {\n  id           String    @id @default(cuid())\n  labelId      String?   @db.VarChar(100)\n  name         String    @db.VarChar(100)\n  color        String    @db.VarChar(100)\n  predefinedId String?   @db.VarChar(100)\n  createdAt    DateTime? @default(now()) @db.Timestamp\n  updatedAt    DateTime  @updatedAt @db.Timestamp\n  Instance     Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId   String\n\n  @@unique([labelId, instanceId])\n  @@schema(\"evolution\")\n}\n\nmodel Proxy {\n  id         String    @id @default(cuid())\n  enabled    Boolean   @default(false) @db.Boolean\n  host       String    @db.VarChar(100)\n  port       String    @db.VarChar(100)\n  protocol   String    @db.VarChar(100)\n  username   String    @db.VarChar(100)\n  password   String    @db.VarChar(100)\n  createdAt  DateTime? @default(now()) @db.Timestamp\n  updatedAt  DateTime  @updatedAt @db.Timestamp\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Setting {\n  id              String    @id @default(cuid())\n  rejectCall      Boolean   @default(false) @db.Boolean\n  msgCall         String?   @db.VarChar(100)\n  groupsIgnore    Boolean   @default(false) @db.Boolean\n  alwaysOnline    Boolean   @default(false) @db.Boolean\n  readMessages    Boolean   @default(false) @db.Boolean\n  readStatus      Boolean   @default(false) @db.Boolean\n  syncFullHistory Boolean   @default(false) @db.Boolean\n  wavoipToken     String?   @db.VarChar(100)\n  createdAt       DateTime? @default(now()) @db.Timestamp\n  updatedAt       DateTime  @updatedAt @db.Timestamp\n  Instance        Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String    @unique\n\n  @@index([instanceId])\n  @@schema(\"evolution\")\n}\n\nmodel Rabbitmq {\n  id         String    @id @default(cuid())\n  enabled    Boolean   @default(false) @db.Boolean\n  events     Json      @db.JsonB\n  createdAt  DateTime? @default(now()) @db.Timestamp\n  updatedAt  DateTime  @updatedAt @db.Timestamp\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Nats {\n  id         String    @id @default(cuid())\n  enabled    Boolean   @default(false) @db.Boolean\n  events     Json      @db.JsonB\n  createdAt  DateTime? @default(now()) @db.Timestamp\n  updatedAt  DateTime  @updatedAt @db.Timestamp\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Sqs {\n  id         String    @id @default(cuid())\n  enabled    Boolean   @default(false) @db.Boolean\n  events     Json      @db.JsonB\n  createdAt  DateTime? @default(now()) @db.Timestamp\n  updatedAt  DateTime  @updatedAt @db.Timestamp\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Websocket {\n  id         String    @id @default(cuid())\n  enabled    Boolean   @default(false) @db.Boolean\n  events     Json      @db.JsonB\n  createdAt  DateTime? @default(now()) @db.Timestamp\n  updatedAt  DateTime  @updatedAt @db.Timestamp\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Pusher {\n  id         String    @id @default(cuid())\n  enabled    Boolean   @default(false) @db.Boolean\n  appId      String    @db.VarChar(100)\n  key        String    @db.VarChar(100)\n  secret     String    @db.VarChar(100)\n  cluster    String    @db.VarChar(100)\n  useTLS     Boolean   @default(false) @db.Boolean\n  events     Json      @db.JsonB\n  createdAt  DateTime? @default(now()) @db.Timestamp\n  updatedAt  DateTime  @updatedAt @db.Timestamp\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Typebot {\n  id              String           @id @default(cuid())\n  enabled         Boolean          @default(true) @db.Boolean\n  description     String?          @db.VarChar(255)\n  url             String           @db.VarChar(500)\n  typebot         String           @db.VarChar(100)\n  expire          Int?             @default(0) @db.Integer\n  keywordFinish   String?          @db.VarChar(100)\n  delayMessage    Int?             @db.Integer\n  unknownMessage  String?          @db.VarChar(100)\n  listeningFromMe Boolean?         @default(false) @db.Boolean\n  stopBotFromMe   Boolean?         @default(false) @db.Boolean\n  keepOpen        Boolean?         @default(false) @db.Boolean\n  debounceTime    Int?             @db.Integer\n  createdAt       DateTime?        @default(now()) @db.Timestamp\n  updatedAt       DateTime?        @updatedAt @db.Timestamp\n  ignoreJids      Json?\n  triggerType     TriggerType?\n  triggerOperator TriggerOperator?\n  triggerValue    String?\n  splitMessages   Boolean?         @default(false) @db.Boolean\n  timePerChar     Int?             @default(50) @db.Integer\n  Instance        Instance         @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String\n  TypebotSetting  TypebotSetting[]\n\n  @@schema(\"evolution\")\n}\n\nmodel TypebotSetting {\n  id                String    @id @default(cuid())\n  expire            Int?      @default(0) @db.Integer\n  keywordFinish     String?   @db.VarChar(100)\n  delayMessage      Int?      @db.Integer\n  unknownMessage    String?   @db.VarChar(100)\n  listeningFromMe   Boolean?  @default(false) @db.Boolean\n  stopBotFromMe     Boolean?  @default(false) @db.Boolean\n  keepOpen          Boolean?  @default(false) @db.Boolean\n  debounceTime      Int?      @db.Integer\n  typebotIdFallback String?   @db.VarChar(100)\n  ignoreJids        Json?\n  splitMessages     Boolean?  @default(false) @db.Boolean\n  timePerChar       Int?      @default(50) @db.Integer\n  createdAt         DateTime? @default(now()) @db.Timestamp\n  updatedAt         DateTime  @updatedAt @db.Timestamp\n  Fallback          Typebot?  @relation(fields: [typebotIdFallback], references: [id])\n  Instance          Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId        String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Media {\n  id         String    @id @default(cuid())\n  fileName   String    @db.VarChar(500)\n  type       String    @db.VarChar(100)\n  mimetype   String    @db.VarChar(100)\n  createdAt  DateTime? @default(now()) @db.Date\n  Message    Message   @relation(fields: [messageId], references: [id], onDelete: Cascade)\n  messageId  String    @unique\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String\n\n  @@schema(\"evolution\")\n}\n\nmodel OpenaiCreds {\n  id              String         @id @default(cuid())\n  name            String?        @unique @db.VarChar(255)\n  apiKey          String?        @unique @db.VarChar(255)\n  createdAt       DateTime?      @default(now()) @db.Timestamp\n  updatedAt       DateTime       @updatedAt @db.Timestamp\n  Instance        Instance       @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String\n  OpenaiAssistant OpenaiBot[]\n  OpenaiSetting   OpenaiSetting?\n\n  @@schema(\"evolution\")\n}\n\nmodel OpenaiBot {\n  id                String           @id @default(cuid())\n  enabled           Boolean          @default(true) @db.Boolean\n  description       String?          @db.VarChar(255)\n  botType           OpenaiBotType\n  assistantId       String?          @db.VarChar(255)\n  functionUrl       String?          @db.VarChar(500)\n  model             String?          @db.VarChar(100)\n  systemMessages    Json?            @db.JsonB\n  assistantMessages Json?            @db.JsonB\n  userMessages      Json?            @db.JsonB\n  maxTokens         Int?             @db.Integer\n  expire            Int?             @default(0) @db.Integer\n  keywordFinish     String?          @db.VarChar(100)\n  delayMessage      Int?             @db.Integer\n  unknownMessage    String?          @db.VarChar(100)\n  listeningFromMe   Boolean?         @default(false) @db.Boolean\n  stopBotFromMe     Boolean?         @default(false) @db.Boolean\n  keepOpen          Boolean?         @default(false) @db.Boolean\n  debounceTime      Int?             @db.Integer\n  splitMessages     Boolean?         @default(false) @db.Boolean\n  timePerChar       Int?             @default(50) @db.Integer\n  ignoreJids        Json?\n  triggerType       TriggerType?\n  triggerOperator   TriggerOperator?\n  triggerValue      String?\n  createdAt         DateTime?        @default(now()) @db.Timestamp\n  updatedAt         DateTime         @updatedAt @db.Timestamp\n  OpenaiCreds       OpenaiCreds      @relation(fields: [openaiCredsId], references: [id], onDelete: Cascade)\n  openaiCredsId     String\n  Instance          Instance         @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId        String\n  OpenaiSetting     OpenaiSetting[]\n\n  @@schema(\"evolution\")\n}\n\nmodel IntegrationSession {\n  id         String        @id @default(cuid())\n  sessionId  String        @db.VarChar(255)\n  remoteJid  String        @db.VarChar(100)\n  pushName   String?\n  status     SessionStatus\n  awaitUser  Boolean       @default(false) @db.Boolean\n  context    Json?\n  type       String?       @db.VarChar(100)\n  createdAt  DateTime?     @default(now()) @db.Timestamp\n  updatedAt  DateTime      @updatedAt @db.Timestamp\n  Message    Message[]\n  Instance   Instance      @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String\n  parameters Json?         @db.JsonB\n\n  botId String?\n\n  @@schema(\"evolution\")\n}\n\nmodel OpenaiSetting {\n  id               String       @id @default(cuid())\n  expire           Int?         @default(0) @db.Integer\n  keywordFinish    String?      @db.VarChar(100)\n  delayMessage     Int?         @db.Integer\n  unknownMessage   String?      @db.VarChar(100)\n  listeningFromMe  Boolean?     @default(false) @db.Boolean\n  stopBotFromMe    Boolean?     @default(false) @db.Boolean\n  keepOpen         Boolean?     @default(false) @db.Boolean\n  debounceTime     Int?         @db.Integer\n  ignoreJids       Json?\n  splitMessages    Boolean?     @default(false) @db.Boolean\n  timePerChar      Int?         @default(50) @db.Integer\n  speechToText     Boolean?     @default(false) @db.Boolean\n  createdAt        DateTime?    @default(now()) @db.Timestamp\n  updatedAt        DateTime     @updatedAt @db.Timestamp\n  OpenaiCreds      OpenaiCreds? @relation(fields: [openaiCredsId], references: [id])\n  openaiCredsId    String       @unique\n  Fallback         OpenaiBot?   @relation(fields: [openaiIdFallback], references: [id])\n  openaiIdFallback String?      @db.VarChar(100)\n  Instance         Instance     @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId       String       @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Template {\n  id         String    @id @default(cuid())\n  templateId String    @unique @db.VarChar(255)\n  name       String    @unique @db.VarChar(255)\n  template   Json      @db.JsonB\n  webhookUrl String?   @db.VarChar(500)\n  createdAt  DateTime? @default(now()) @db.Timestamp\n  updatedAt  DateTime  @updatedAt @db.Timestamp\n  Instance   Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId String\n\n  @@schema(\"evolution\")\n}\n\nmodel Dify {\n  id              String           @id @default(cuid())\n  enabled         Boolean          @default(true) @db.Boolean\n  description     String?          @db.VarChar(255)\n  botType         DifyBotType\n  apiUrl          String?          @db.VarChar(255)\n  apiKey          String?          @db.VarChar(255)\n  expire          Int?             @default(0) @db.Integer\n  keywordFinish   String?          @db.VarChar(100)\n  delayMessage    Int?             @db.Integer\n  unknownMessage  String?          @db.VarChar(100)\n  listeningFromMe Boolean?         @default(false) @db.Boolean\n  stopBotFromMe   Boolean?         @default(false) @db.Boolean\n  keepOpen        Boolean?         @default(false) @db.Boolean\n  debounceTime    Int?             @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?         @default(false) @db.Boolean\n  timePerChar     Int?             @default(50) @db.Integer\n  triggerType     TriggerType?\n  triggerOperator TriggerOperator?\n  triggerValue    String?\n  createdAt       DateTime?        @default(now()) @db.Timestamp\n  updatedAt       DateTime         @updatedAt @db.Timestamp\n  Instance        Instance         @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String\n  DifySetting     DifySetting[]\n\n  @@schema(\"evolution\")\n}\n\nmodel DifySetting {\n  id              String    @id @default(cuid())\n  expire          Int?      @default(0) @db.Integer\n  keywordFinish   String?   @db.VarChar(100)\n  delayMessage    Int?      @db.Integer\n  unknownMessage  String?   @db.VarChar(100)\n  listeningFromMe Boolean?  @default(false) @db.Boolean\n  stopBotFromMe   Boolean?  @default(false) @db.Boolean\n  keepOpen        Boolean?  @default(false) @db.Boolean\n  debounceTime    Int?      @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?  @default(false) @db.Boolean\n  timePerChar     Int?      @default(50) @db.Integer\n  createdAt       DateTime? @default(now()) @db.Timestamp\n  updatedAt       DateTime  @updatedAt @db.Timestamp\n  Fallback        Dify?     @relation(fields: [difyIdFallback], references: [id])\n  difyIdFallback  String?   @db.VarChar(100)\n  Instance        Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel EvolutionBot {\n  id                  String                @id @default(cuid())\n  enabled             Boolean               @default(true) @db.Boolean\n  description         String?               @db.VarChar(255)\n  apiUrl              String?               @db.VarChar(255)\n  apiKey              String?               @db.VarChar(255)\n  expire              Int?                  @default(0) @db.Integer\n  keywordFinish       String?               @db.VarChar(100)\n  delayMessage        Int?                  @db.Integer\n  unknownMessage      String?               @db.VarChar(100)\n  listeningFromMe     Boolean?              @default(false) @db.Boolean\n  stopBotFromMe       Boolean?              @default(false) @db.Boolean\n  keepOpen            Boolean?              @default(false) @db.Boolean\n  debounceTime        Int?                  @db.Integer\n  ignoreJids          Json?\n  splitMessages       Boolean?              @default(false) @db.Boolean\n  timePerChar         Int?                  @default(50) @db.Integer\n  triggerType         TriggerType?\n  triggerOperator     TriggerOperator?\n  triggerValue        String?\n  createdAt           DateTime?             @default(now()) @db.Timestamp\n  updatedAt           DateTime              @updatedAt @db.Timestamp\n  Instance            Instance              @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId          String\n  EvolutionBotSetting EvolutionBotSetting[]\n\n  @@schema(\"evolution\")\n}\n\nmodel EvolutionBotSetting {\n  id              String        @id @default(cuid())\n  expire          Int?          @default(0) @db.Integer\n  keywordFinish   String?       @db.VarChar(100)\n  delayMessage    Int?          @db.Integer\n  unknownMessage  String?       @db.VarChar(100)\n  listeningFromMe Boolean?      @default(false) @db.Boolean\n  stopBotFromMe   Boolean?      @default(false) @db.Boolean\n  keepOpen        Boolean?      @default(false) @db.Boolean\n  debounceTime    Int?          @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?      @default(false) @db.Boolean\n  timePerChar     Int?          @default(50) @db.Integer\n  createdAt       DateTime?     @default(now()) @db.Timestamp\n  updatedAt       DateTime      @updatedAt @db.Timestamp\n  Fallback        EvolutionBot? @relation(fields: [botIdFallback], references: [id])\n  botIdFallback   String?       @db.VarChar(100)\n  Instance        Instance      @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String        @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Flowise {\n  id              String           @id @default(cuid())\n  enabled         Boolean          @default(true) @db.Boolean\n  description     String?          @db.VarChar(255)\n  apiUrl          String?          @db.VarChar(255)\n  apiKey          String?          @db.VarChar(255)\n  expire          Int?             @default(0) @db.Integer\n  keywordFinish   String?          @db.VarChar(100)\n  delayMessage    Int?             @db.Integer\n  unknownMessage  String?          @db.VarChar(100)\n  listeningFromMe Boolean?         @default(false) @db.Boolean\n  stopBotFromMe   Boolean?         @default(false) @db.Boolean\n  keepOpen        Boolean?         @default(false) @db.Boolean\n  debounceTime    Int?             @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?         @default(false) @db.Boolean\n  timePerChar     Int?             @default(50) @db.Integer\n  triggerType     TriggerType?\n  triggerOperator TriggerOperator?\n  triggerValue    String?\n  createdAt       DateTime?        @default(now()) @db.Timestamp\n  updatedAt       DateTime         @updatedAt @db.Timestamp\n  Instance        Instance         @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String\n  FlowiseSetting  FlowiseSetting[]\n\n  @@schema(\"evolution\")\n}\n\nmodel FlowiseSetting {\n  id                String    @id @default(cuid())\n  expire            Int?      @default(0) @db.Integer\n  keywordFinish     String?   @db.VarChar(100)\n  delayMessage      Int?      @db.Integer\n  unknownMessage    String?   @db.VarChar(100)\n  listeningFromMe   Boolean?  @default(false) @db.Boolean\n  stopBotFromMe     Boolean?  @default(false) @db.Boolean\n  keepOpen          Boolean?  @default(false) @db.Boolean\n  debounceTime      Int?      @db.Integer\n  ignoreJids        Json?\n  splitMessages     Boolean?  @default(false) @db.Boolean\n  timePerChar       Int?      @default(50) @db.Integer\n  createdAt         DateTime? @default(now()) @db.Timestamp\n  updatedAt         DateTime  @updatedAt @db.Timestamp\n  Fallback          Flowise?  @relation(fields: [flowiseIdFallback], references: [id])\n  flowiseIdFallback String?   @db.VarChar(100)\n  Instance          Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId        String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel IsOnWhatsapp {\n  id         String   @id @default(cuid())\n  remoteJid  String   @unique @db.VarChar(100)\n  jidOptions String\n  lid        String?  @db.VarChar(100)\n  createdAt  DateTime @default(now()) @db.Timestamp\n  updatedAt  DateTime @updatedAt @db.Timestamp\n\n  @@schema(\"evolution\")\n}\n\nmodel N8n {\n  id              String           @id @default(cuid())\n  enabled         Boolean          @default(true) @db.Boolean\n  description     String?          @db.VarChar(255)\n  webhookUrl      String?          @db.VarChar(255)\n  basicAuthUser   String?          @db.VarChar(255)\n  basicAuthPass   String?          @db.VarChar(255)\n  expire          Int?             @default(0) @db.Integer\n  keywordFinish   String?          @db.VarChar(100)\n  delayMessage    Int?             @db.Integer\n  unknownMessage  String?          @db.VarChar(100)\n  listeningFromMe Boolean?         @default(false) @db.Boolean\n  stopBotFromMe   Boolean?         @default(false) @db.Boolean\n  keepOpen        Boolean?         @default(false) @db.Boolean\n  debounceTime    Int?             @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?         @default(false) @db.Boolean\n  timePerChar     Int?             @default(50) @db.Integer\n  triggerType     TriggerType?\n  triggerOperator TriggerOperator?\n  triggerValue    String?\n  createdAt       DateTime?        @default(now()) @db.Timestamp\n  updatedAt       DateTime         @updatedAt @db.Timestamp\n  Instance        Instance         @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String\n  N8nSetting      N8nSetting[]\n\n  @@schema(\"evolution\")\n}\n\nmodel N8nSetting {\n  id              String    @id @default(cuid())\n  expire          Int?      @default(0) @db.Integer\n  keywordFinish   String?   @db.VarChar(100)\n  delayMessage    Int?      @db.Integer\n  unknownMessage  String?   @db.VarChar(100)\n  listeningFromMe Boolean?  @default(false) @db.Boolean\n  stopBotFromMe   Boolean?  @default(false) @db.Boolean\n  keepOpen        Boolean?  @default(false) @db.Boolean\n  debounceTime    Int?      @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?  @default(false) @db.Boolean\n  timePerChar     Int?      @default(50) @db.Integer\n  createdAt       DateTime? @default(now()) @db.Timestamp\n  updatedAt       DateTime  @updatedAt @db.Timestamp\n  Fallback        N8n?      @relation(fields: [n8nIdFallback], references: [id])\n  n8nIdFallback   String?   @db.VarChar(100)\n  Instance        Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String    @unique\n\n  @@schema(\"evolution\")\n}\n\nmodel Evoai {\n  id              String           @id @default(cuid())\n  enabled         Boolean          @default(true) @db.Boolean\n  description     String?          @db.VarChar(255)\n  agentUrl        String?          @db.VarChar(255)\n  apiKey          String?          @db.VarChar(255)\n  expire          Int?             @default(0) @db.Integer\n  keywordFinish   String?          @db.VarChar(100)\n  delayMessage    Int?             @db.Integer\n  unknownMessage  String?          @db.VarChar(100)\n  listeningFromMe Boolean?         @default(false) @db.Boolean\n  stopBotFromMe   Boolean?         @default(false) @db.Boolean\n  keepOpen        Boolean?         @default(false) @db.Boolean\n  debounceTime    Int?             @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?         @default(false) @db.Boolean\n  timePerChar     Int?             @default(50) @db.Integer\n  triggerType     TriggerType?\n  triggerOperator TriggerOperator?\n  triggerValue    String?\n  createdAt       DateTime?        @default(now()) @db.Timestamp\n  updatedAt       DateTime         @updatedAt @db.Timestamp\n  Instance        Instance         @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String\n  EvoaiSetting    EvoaiSetting[]\n\n  @@schema(\"evolution\")\n}\n\nmodel EvoaiSetting {\n  id              String    @id @default(cuid())\n  expire          Int?      @default(0) @db.Integer\n  keywordFinish   String?   @db.VarChar(100)\n  delayMessage    Int?      @db.Integer\n  unknownMessage  String?   @db.VarChar(100)\n  listeningFromMe Boolean?  @default(false) @db.Boolean\n  stopBotFromMe   Boolean?  @default(false) @db.Boolean\n  keepOpen        Boolean?  @default(false) @db.Boolean\n  debounceTime    Int?      @db.Integer\n  ignoreJids      Json?\n  splitMessages   Boolean?  @default(false) @db.Boolean\n  timePerChar     Int?      @default(50) @db.Integer\n  createdAt       DateTime? @default(now()) @db.Timestamp\n  updatedAt       DateTime  @updatedAt @db.Timestamp\n  Fallback        Evoai?    @relation(fields: [evoaiIdFallback], references: [id])\n  evoaiIdFallback String?   @db.VarChar(100)\n  Instance        Instance  @relation(fields: [instanceId], references: [id], onDelete: Cascade)\n  instanceId      String    @unique\n\n  @@schema(\"evolution\")\n}\n",
  "inlineSchemaHash": "9a733ef99ad149f68e21cc7a78d065a949aba39a972beb945e6eddbd2ef47c52",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Instance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"connectionStatus\",\"kind\":\"enum\",\"type\":\"InstanceConnectionStatus\"},{\"name\":\"ownerJid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"integration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"disconnectionReasonCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"disconnectionObject\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"disconnectionAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Chat\",\"kind\":\"object\",\"type\":\"Chat\",\"relationName\":\"ChatToInstance\"},{\"name\":\"Contact\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToInstance\"},{\"name\":\"Message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"InstanceToMessage\"},{\"name\":\"Webhook\",\"kind\":\"object\",\"type\":\"Webhook\",\"relationName\":\"InstanceToWebhook\"},{\"name\":\"Chatwoot\",\"kind\":\"object\",\"type\":\"Chatwoot\",\"relationName\":\"ChatwootToInstance\"},{\"name\":\"Label\",\"kind\":\"object\",\"type\":\"Label\",\"relationName\":\"InstanceToLabel\"},{\"name\":\"Proxy\",\"kind\":\"object\",\"type\":\"Proxy\",\"relationName\":\"InstanceToProxy\"},{\"name\":\"Setting\",\"kind\":\"object\",\"type\":\"Setting\",\"relationName\":\"InstanceToSetting\"},{\"name\":\"Rabbitmq\",\"kind\":\"object\",\"type\":\"Rabbitmq\",\"relationName\":\"InstanceToRabbitmq\"},{\"name\":\"Nats\",\"kind\":\"object\",\"type\":\"Nats\",\"relationName\":\"InstanceToNats\"},{\"name\":\"Sqs\",\"kind\":\"object\",\"type\":\"Sqs\",\"relationName\":\"InstanceToSqs\"},{\"name\":\"Websocket\",\"kind\":\"object\",\"type\":\"Websocket\",\"relationName\":\"InstanceToWebsocket\"},{\"name\":\"Typebot\",\"kind\":\"object\",\"type\":\"Typebot\",\"relationName\":\"InstanceToTypebot\"},{\"name\":\"Session\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"InstanceToSession\"},{\"name\":\"MessageUpdate\",\"kind\":\"object\",\"type\":\"MessageUpdate\",\"relationName\":\"InstanceToMessageUpdate\"},{\"name\":\"TypebotSetting\",\"kind\":\"object\",\"type\":\"TypebotSetting\",\"relationName\":\"InstanceToTypebotSetting\"},{\"name\":\"Media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"InstanceToMedia\"},{\"name\":\"OpenaiCreds\",\"kind\":\"object\",\"type\":\"OpenaiCreds\",\"relationName\":\"InstanceToOpenaiCreds\"},{\"name\":\"OpenaiBot\",\"kind\":\"object\",\"type\":\"OpenaiBot\",\"relationName\":\"InstanceToOpenaiBot\"},{\"name\":\"OpenaiSetting\",\"kind\":\"object\",\"type\":\"OpenaiSetting\",\"relationName\":\"InstanceToOpenaiSetting\"},{\"name\":\"Template\",\"kind\":\"object\",\"type\":\"Template\",\"relationName\":\"InstanceToTemplate\"},{\"name\":\"Dify\",\"kind\":\"object\",\"type\":\"Dify\",\"relationName\":\"DifyToInstance\"},{\"name\":\"DifySetting\",\"kind\":\"object\",\"type\":\"DifySetting\",\"relationName\":\"DifySettingToInstance\"},{\"name\":\"IntegrationSession\",\"kind\":\"object\",\"type\":\"IntegrationSession\",\"relationName\":\"InstanceToIntegrationSession\"},{\"name\":\"EvolutionBot\",\"kind\":\"object\",\"type\":\"EvolutionBot\",\"relationName\":\"EvolutionBotToInstance\"},{\"name\":\"EvolutionBotSetting\",\"kind\":\"object\",\"type\":\"EvolutionBotSetting\",\"relationName\":\"EvolutionBotSettingToInstance\"},{\"name\":\"Flowise\",\"kind\":\"object\",\"type\":\"Flowise\",\"relationName\":\"FlowiseToInstance\"},{\"name\":\"FlowiseSetting\",\"kind\":\"object\",\"type\":\"FlowiseSetting\",\"relationName\":\"FlowiseSettingToInstance\"},{\"name\":\"Pusher\",\"kind\":\"object\",\"type\":\"Pusher\",\"relationName\":\"InstanceToPusher\"},{\"name\":\"N8n\",\"kind\":\"object\",\"type\":\"N8n\",\"relationName\":\"InstanceToN8n\"},{\"name\":\"N8nSetting\",\"kind\":\"object\",\"type\":\"N8nSetting\",\"relationName\":\"InstanceToN8nSetting\"},{\"name\":\"Evoai\",\"kind\":\"object\",\"type\":\"Evoai\",\"relationName\":\"EvoaiToInstance\"},{\"name\":\"EvoaiSetting\",\"kind\":\"object\",\"type\":\"EvoaiSetting\",\"relationName\":\"EvoaiSettingToInstance\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creds\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToSession\"}],\"dbName\":null},\"Chat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remoteJid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"labels\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"ChatToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unreadMessages\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Contact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remoteJid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pushName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"ContactToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"pushName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"participant\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"contextInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"DeviceMessage\"},{\"name\":\"messageTimestamp\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatwootMessageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatwootInboxId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatwootConversationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatwootContactInboxSourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatwootIsRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToMessage\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"MessageUpdate\",\"kind\":\"object\",\"type\":\"MessageUpdate\",\"relationName\":\"MessageToMessageUpdate\"},{\"name\":\"Media\",\"kind\":\"object\",\"type\":\"Media\",\"relationName\":\"MediaToMessage\"},{\"name\":\"webhookUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"IntegrationSession\",\"relationName\":\"IntegrationSessionToMessage\"}],\"dbName\":null},\"MessageUpdate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remoteJid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"participant\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pollUpdates\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToMessageUpdate\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToMessageUpdate\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Webhook\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"headers\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"webhookByEvents\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"webhookBase64\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToWebhook\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Chatwoot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nameInbox\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signMsg\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"signDelimiter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reopenConversation\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"conversationPending\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mergeBrazilContacts\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"importContacts\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"importMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"daysLimitImportMessages\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"organization\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"ChatwootToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Label\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"labelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"predefinedId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToLabel\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Proxy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"host\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"port\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"protocol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToProxy\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Setting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectCall\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"msgCall\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupsIgnore\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"alwaysOnline\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"readMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"readStatus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"syncFullHistory\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"wavoipToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToSetting\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Rabbitmq\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToRabbitmq\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Nats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToNats\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Sqs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToSqs\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Websocket\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToWebsocket\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Pusher\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"appId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cluster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"useTLS\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToPusher\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Typebot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"typebot\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerOperator\",\"kind\":\"enum\",\"type\":\"TriggerOperator\"},{\"name\":\"triggerValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToTypebot\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TypebotSetting\",\"kind\":\"object\",\"type\":\"TypebotSetting\",\"relationName\":\"TypebotToTypebotSetting\"}],\"dbName\":null},\"TypebotSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"typebotIdFallback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Fallback\",\"kind\":\"object\",\"type\":\"Typebot\",\"relationName\":\"TypebotToTypebotSetting\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToTypebotSetting\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Media\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimetype\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MediaToMessage\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToMedia\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"OpenaiCreds\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToOpenaiCreds\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"OpenaiAssistant\",\"kind\":\"object\",\"type\":\"OpenaiBot\",\"relationName\":\"OpenaiBotToOpenaiCreds\"},{\"name\":\"OpenaiSetting\",\"kind\":\"object\",\"type\":\"OpenaiSetting\",\"relationName\":\"OpenaiCredsToOpenaiSetting\"}],\"dbName\":null},\"OpenaiBot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"botType\",\"kind\":\"enum\",\"type\":\"OpenaiBotType\"},{\"name\":\"assistantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"functionUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"systemMessages\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"assistantMessages\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userMessages\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"maxTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerOperator\",\"kind\":\"enum\",\"type\":\"TriggerOperator\"},{\"name\":\"triggerValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"OpenaiCreds\",\"kind\":\"object\",\"type\":\"OpenaiCreds\",\"relationName\":\"OpenaiBotToOpenaiCreds\"},{\"name\":\"openaiCredsId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToOpenaiBot\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"OpenaiSetting\",\"kind\":\"object\",\"type\":\"OpenaiSetting\",\"relationName\":\"OpenaiBotToOpenaiSetting\"}],\"dbName\":null},\"IntegrationSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remoteJid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pushName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SessionStatus\"},{\"name\":\"awaitUser\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"context\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Message\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"IntegrationSessionToMessage\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToIntegrationSession\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"botId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"OpenaiSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"speechToText\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"OpenaiCreds\",\"kind\":\"object\",\"type\":\"OpenaiCreds\",\"relationName\":\"OpenaiCredsToOpenaiSetting\"},{\"name\":\"openaiCredsId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Fallback\",\"kind\":\"object\",\"type\":\"OpenaiBot\",\"relationName\":\"OpenaiBotToOpenaiSetting\"},{\"name\":\"openaiIdFallback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToOpenaiSetting\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Template\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"template\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"webhookUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToTemplate\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Dify\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"botType\",\"kind\":\"enum\",\"type\":\"DifyBotType\"},{\"name\":\"apiUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerOperator\",\"kind\":\"enum\",\"type\":\"TriggerOperator\"},{\"name\":\"triggerValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"DifyToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DifySetting\",\"kind\":\"object\",\"type\":\"DifySetting\",\"relationName\":\"DifyToDifySetting\"}],\"dbName\":null},\"DifySetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Fallback\",\"kind\":\"object\",\"type\":\"Dify\",\"relationName\":\"DifyToDifySetting\"},{\"name\":\"difyIdFallback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"DifySettingToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"EvolutionBot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerOperator\",\"kind\":\"enum\",\"type\":\"TriggerOperator\"},{\"name\":\"triggerValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"EvolutionBotToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"EvolutionBotSetting\",\"kind\":\"object\",\"type\":\"EvolutionBotSetting\",\"relationName\":\"EvolutionBotToEvolutionBotSetting\"}],\"dbName\":null},\"EvolutionBotSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Fallback\",\"kind\":\"object\",\"type\":\"EvolutionBot\",\"relationName\":\"EvolutionBotToEvolutionBotSetting\"},{\"name\":\"botIdFallback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"EvolutionBotSettingToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Flowise\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerOperator\",\"kind\":\"enum\",\"type\":\"TriggerOperator\"},{\"name\":\"triggerValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"FlowiseToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FlowiseSetting\",\"kind\":\"object\",\"type\":\"FlowiseSetting\",\"relationName\":\"FlowiseToFlowiseSetting\"}],\"dbName\":null},\"FlowiseSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Fallback\",\"kind\":\"object\",\"type\":\"Flowise\",\"relationName\":\"FlowiseToFlowiseSetting\"},{\"name\":\"flowiseIdFallback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"FlowiseSettingToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"IsOnWhatsapp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remoteJid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jidOptions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"N8n\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webhookUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basicAuthUser\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basicAuthPass\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerOperator\",\"kind\":\"enum\",\"type\":\"TriggerOperator\"},{\"name\":\"triggerValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToN8n\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"N8nSetting\",\"kind\":\"object\",\"type\":\"N8nSetting\",\"relationName\":\"N8nToN8nSetting\"}],\"dbName\":null},\"N8nSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Fallback\",\"kind\":\"object\",\"type\":\"N8n\",\"relationName\":\"N8nToN8nSetting\"},{\"name\":\"n8nIdFallback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"InstanceToN8nSetting\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Evoai\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"triggerType\",\"kind\":\"enum\",\"type\":\"TriggerType\"},{\"name\":\"triggerOperator\",\"kind\":\"enum\",\"type\":\"TriggerOperator\"},{\"name\":\"triggerValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"EvoaiToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"EvoaiSetting\",\"kind\":\"object\",\"type\":\"EvoaiSetting\",\"relationName\":\"EvoaiToEvoaiSetting\"}],\"dbName\":null},\"EvoaiSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keywordFinish\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"delayMessage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unknownMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"listeningFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stopBotFromMe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"keepOpen\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"debounceTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ignoreJids\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"splitMessages\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timePerChar\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Fallback\",\"kind\":\"object\",\"type\":\"Evoai\",\"relationName\":\"EvoaiToEvoaiSetting\"},{\"name\":\"evoaiIdFallback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Instance\",\"kind\":\"object\",\"type\":\"Instance\",\"relationName\":\"EvoaiSettingToInstance\"},{\"name\":\"instanceId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

